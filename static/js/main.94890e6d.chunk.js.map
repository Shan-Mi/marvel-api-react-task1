{"version":3,"sources":["components/CharItem.styles.jsx","components/Spinner.styles.jsx","components/Spinner.jsx","components/WithSpinner.jsx","components/CharItem.jsx","components/CharListContainer.jsx","components/CharList.jsx","components/useFetch.jsx","pages/CharListPage.jsx","components/LayoutWrapper.jsx","pages/Homepage.styles.jsx","pages/Homepage.jsx","components/GlobalStyle.styles.jsx","components/CharDetail.styles.jsx","components/DetailInfoContainer.jsx","components/CharDetail.jsx","components/CharDetailPage.jsx","App.js","serviceWorker.js","index.js"],"names":["ImageContainer","styled","div","CharItemContainer","SpinnerOverlay","SpinnerContainer","Spinner","WithSpinner","WrappedComponent","isLoading","otherProps","data","index","name","thumbnail","extension","path","comics","available","items","stories","to","src","alt","CharListContainer","map","item","key","id","useFetch","url","dependencies","useState","setData","setIsLoading","useEffect","fetch","then","res","ok","Error","json","result","results","LayoutSimple","children","className","HomepageWrapper","Homepage","GlobalStyle","createGlobalStyle","NameListContainer","HeaderContainer","DetailInfoContainer","comicsNumber","comicsItems","events","eventsNumber","eventsItems","series","storiesNumber","storiesItems","i","CharDetailPage","props","match","params","App","exact","render","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.94890e6d.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const ImageContainer = styled.div`\n  display: block;\n\n  img {\n    object-fit: cover;\n    width: 300px;\n    height: 300px;\n    margin: auto;\n    display: block;\n    border-top-left-radius: 10px;\n    border-top-right-radius: 10px;\n  }\n`;\nexport const CharItemContainer = styled.div`\n  width: 300px;\n  margin: 1rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  box-shadow: 0 0 1px 0 #3e2020;\n  border-radius: 10px;\n\n  h1 {\n    text-align: center;\n  }\n\n  &:hover {\n    transform: scale(1.02);\n    transition: transform 250ms ease-in;\n  }\n  transition: transform 200ms ease-out;\n`;\n","import styled from \"styled-components\";\n\nexport const SpinnerOverlay = styled.div`\n  height: 60vh;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const SpinnerContainer = styled.div`\n  display: inline-block;\n  width: 50px;\n  height: 50px;\n  border: 3px solid rgba(195, 195, 195, 0.6);\n  border-radius: 50%;\n  border-top-color: #636767;\n  animation: spin 1s ease-in-out infinite;\n  -webkit-animation: spin 1s ease-in-out infinite;\n  @keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n`;\n","import React from \"react\";\n\nimport { SpinnerContainer, SpinnerOverlay } from \"./Spinner.styles\";\n\n// spinner is going to be a presentational component\nconst Spinner = () => (\n  <SpinnerOverlay>\n    <SpinnerContainer />\n  </SpinnerOverlay>\n);\n\nexport default Spinner;\n","import React from \"react\";\n\nimport Spinner from \"./Spinner\";\n\nconst WithSpinner = (WrappedComponent) => ({ isLoading, ...otherProps }) => {\n  return isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />;\n};\n\nexport default WithSpinner;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ImageContainer, CharItemContainer } from \"./CharItem.styles\";\nimport WithSpinner from \"./WithSpinner\";\n\nconst CharItem = ({ data, index, isLoading }) => {\n  const {\n    // id,\n    name,\n    thumbnail: { extension, path },\n    comics: { available, items },\n    stories,\n  } = data;\n\n  return (\n    <CharItemContainer>\n      <Link to={`/characters/${index}`}>\n        <ImageContainer>\n          <img src={`${path}.${extension}`} alt={`${name}`} />\n        </ImageContainer>\n      </Link>\n\n      <Link to={`/characters/${index}`}>\n        <h1>{name}</h1>\n      </Link>\n      <p>{`Comics Available Number: ${available}`}</p>\n    </CharItemContainer>\n  );\n};\n\nexport default WithSpinner(CharItem);\n/* \ncorrect path:\npath + extension\n*/\n","import styled from \"styled-components\";\n\nexport const CharListContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  justify-content: center;\n  margin-top: 2rem;\n`;\n","import React from \"react\";\nimport CharItem from \"./CharItem\";\nimport { CharListContainer } from \"./CharListContainer\";\nimport WithSpinner from \"./WithSpinner\";\n\nconst CharList = ({ data, isLoading }) => {\n  return (\n    <CharListContainer>\n      {data.map((item, index) => (\n        <CharItem\n          key={item.id}\n          isLoading={isLoading}\n          data={item}\n          index={index}\n        />\n      ))}\n    </CharListContainer>\n  );\n};\n\nexport default WithSpinner(CharList);\n","import { useState, useEffect } from \"react\";\n\nexport default function useFetch(url, id, dependencies) {\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  function fetchData() {\n    fetch(url)\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(\"Failed to fetch\");\n        }\n        return res.json();\n      })\n      .then((result) => {\n        id === \"preview\"\n          ? setData(result.data.results)\n          : setData(result.data.results[id]);\n\n        setIsLoading(false);\n      });\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, dependencies); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return [data, isLoading];\n}\n","import React from \"react\";\nimport CharList from \"../components/CharList\";\nimport useFetch from \"../components/useFetch\";\nimport WithSpinner from \"../components/WithSpinner\";\n\nfunction CharListPage() {\n  const [data, isLoading] = useFetch(\n    \"https://mock-data-api.firebaseio.com/marvel-characters.json\",\n    \"preview\",\n    []\n  );\n\n  return <CharList data={data} isLoading={isLoading} />;\n}\n\nexport default WithSpinner(CharListPage);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function LayoutSimple({ children }) {\n  return (\n    <>\n      <div className=\"d-flex justify-content-center mt-4\">\n        <Link className=\" btn btn-outline-primary mr-3 btn-lg\" to=\"/\">\n          Home\n        </Link>\n        <Link className=\" btn btn-outline-info btn-lg \" to=\"/characters\">\n          Go to Chars List\n        </Link>\n\n      </div>\n      {children}\n    </>\n  );\n}\n","import styled from \"styled-components\";\n\nconst HomepageWrapper = styled.div`\n  display: flex;\n  padding: 30vh 0;\n  margin-top: 2vh;\n  justify-content: center;\n  align-self: center;\n  font-family: \"Marvel\", sans-serif;\n  background: url(\"https://i.gifer.com/XsZS.gif\") no-repeat fixed center;\n  background-size: cover;\n  border-radius: 10px;\n\n  h1 {\n    place-self: center;\n    font-size: 3rem;\n    color: peru;\n\n    &:hover {\n      transform: scale(1.1);\n      transition: transform 0.2s ease-in-out;\n    }\n    transition: transform 0.2s ease-in-out 0.2s;\n  }\n`;\nexport default HomepageWrapper;\n","import React from \"react\";\nimport HomepageWrapper from \"./Homepage.styles\";\n\nexport default function Homepage() {\n  return (\n    <HomepageWrapper>\n      <h1>Check your favorite Marvel Characters</h1>\n    </HomepageWrapper>\n  );\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    font-family: 'Open Sans Condensed', sans-serif;\n    padding: 20px 60px;\n    background-color: #d1ccc0;\n    height: 100vh;\n    // background: url('https://i.gifer.com/XsZS.gif') no-repeat fixed center;\n    // background-size: cover;\n\n    @media screen and (max-width: 800px)  {\n      padding: 10px;\n    }\n  }\n\n  a {\n    text-decoration: none;\n    color: black;\n  }\n\n  * {\n    box-sizing: border-box;\n    font-family: \"Marvel\", sans-serif;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const NameListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n\n  p {\n    text-indent: 2rem;\n  }\n`;\n\nexport const HeaderContainer = styled.div`\n  margin: 2rem 0;\n  display: flex;\n\n  justify-content: space-between;\n\n  div {\n    display: flex;\n    flex-direction: column;\n\n    h1,\n    h3 {\n      margin-right: auto;\n    }\n  }\n  img {\n    width: 30vw;\n    max-width: 300px;\n    margin: auto;\n  }\n`;\n","import React from 'react'\n\nconst DetailInfoContainer = ({item:{name} = 'empty'}) => {\n  return (\n    <div>\n      <p>{name}</p>\n    </div>\n  )\n}\n\nexport default DetailInfoContainer\n","import React from \"react\";\n\nimport WithSpinner from \"./WithSpinner\";\nimport { HeaderContainer, NameListContainer } from \"./CharDetail.styles\";\nimport DetailInfoContainer from \"./DetailInfoContainer\";\n\nconst CharDetail = ({ data, isLoading }) => {\n  const {\n    id,\n    name,\n    thumbnail: { extension, path },\n    comics: { available: comicsNumber, items: comicsItems },\n    events: { available: eventsNumber, items: eventsItems },\n    series: { available: seriesNumber, items: seriesItems },\n    stories: { available: storiesNumber, items: storiesItems },\n  } = data;\n\n  return (\n    <div className=\"detail-page-container\">\n      <HeaderContainer>\n        <div>\n          <h1>{name}</h1>\n          <h3>{id}</h3>\n        </div>\n        <img src={`${path}.${extension}`} alt={`${name}`} />\n      </HeaderContainer>\n      <div className=\"detail-page-info-body\">\n        <div className=\"detail-page-comics\">\n          <h3>{`Available comics amount: ${comicsNumber}`}</h3>\n          <NameListContainer>\n            {comicsItems.map((item, i) => (\n              <DetailInfoContainer key={i} item={item} />\n            ))}\n          </NameListContainer>\n        </div>\n\n        <div className=\"detail-page-events\">\n          <h3>{`Available events amount: ${eventsNumber}`}</h3>\n          <NameListContainer>\n            {eventsNumber === 0 ? (\n              <DetailInfoContainer />\n            ) : (\n              eventsItems.map((item, i) => (\n                <DetailInfoContainer key={i} item={item} />\n              ))\n            )}\n          </NameListContainer>\n        </div>\n\n        <div className=\"detail-page-stories\">\n          <h3>{`Available stories amount: ${storiesNumber}`}</h3>\n          <NameListContainer>\n            {storiesItems.map((item, i) => (\n              <DetailInfoContainer key={i} item={item} />\n            ))}\n          </NameListContainer>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WithSpinner(CharDetail);\n","import React from \"react\";\nimport CharItem from \"./CharItem\";\nimport useFetch from \"./useFetch\";\n\nimport CharDetail from \"./CharDetail\";\n\nconst CharDetailPage = (props) => {\n  const id = props.match.params.id;\n  const [data, isLoading] = useFetch(\n    \"https://mock-data-api.firebaseio.com/marvel-characters.json\",\n    id,\n    []\n  );\n\n  return <CharDetail data={data} isLoading={isLoading} />;\n\n  {\n    /* <CharItem data={data} isLoading={isLoading} index={id} />; */\n  }\n};\n\nexport default CharDetailPage;\n","import React from \"react\";\nimport CharListPage from \"./pages/CharListPage\";\nimport { Switch, Route } from \"react-router-dom\";\nimport LayoutWrapper from \"./components/LayoutWrapper\";\nimport Homepage from \"./pages/Homepage\";\n\nimport \"./App.css\";\nimport { GlobalStyle } from \"./components/GlobalStyle.styles.jsx\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport CharDetailPage from \"./components/CharDetailPage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GlobalStyle />\n      <Switch>\n        <Route path=\"/\" exact>\n          <LayoutWrapper>\n            <Homepage />\n          </LayoutWrapper>\n        </Route>\n\n        <Route\n          path=\"/characters/:id\" exact\n          render={(props) => (\n            <LayoutWrapper>\n              <CharDetailPage {...props} />\n            </LayoutWrapper>\n          )}\n        ></Route>\n\n        <Route path=\"/characters\">\n          <LayoutWrapper>\n            <CharListPage />\n          </LayoutWrapper>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}