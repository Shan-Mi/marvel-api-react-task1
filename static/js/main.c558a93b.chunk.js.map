{"version":3,"sources":["components/CharItem.styles.jsx","components/Spinner.styles.jsx","components/Spinner.jsx","components/WithSpinner.jsx","components/CharItem.jsx","components/CharListContainer.jsx","components/CharList.jsx","components/useFetch.jsx","pages/CharListPage.jsx","components/LayoutWrapper.jsx","pages/Homepage.styles.jsx","pages/Homepage.jsx","components/GlobalStyle.styles.jsx","components/CharDetail.styles.jsx","components/DetailInfoContainer.jsx","components/MyButton.styles.jsx","components/MyButton.jsx","components/ButtonsWrapper.styles.jsx","components/PageSwitcher.jsx","components/CharDetail.jsx","components/CharDetailPage.jsx","App.js","serviceWorker.js","index.js"],"names":["ImageContainer","styled","div","CharItemContainer","SpinnerOverlay","SpinnerContainer","Spinner","WithSpinner","WrappedComponent","isLoading","otherProps","data","index","name","thumbnail","extension","path","available","comics","to","src","alt","CharListContainer","map","item","key","id","useFetch","url","dependencies","useState","setData","setIsLoading","useEffect","fetch","then","res","ok","Error","json","result","results","LayoutSimple","children","className","HomepageWrapper","Homepage","GlobalStyle","createGlobalStyle","NameListContainer","HeaderContainer","DetailInfoContainer","buttonStyles","css","CustomButtonContainer","button","MyButton","props","ButtonsWrapper","PageSwitcher","link","pageIndex","exec","pageURL","replace","pagePrev","pageNext","Number","history","useHistory","onClick","push","comicsNumber","comicsItems","items","events","eventsNumber","eventsItems","series","seriesNumber","seriesItems","stories","storiesNumber","storiesItems","i","CharDetailPage","match","params","location","pathname","App","exact","render","Boolean","window","hostname","ReactDOM","StrictMode","forceRefresh","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c558a93b.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const ImageContainer = styled.div`\r\n  display: block;\r\n\r\n  img {\r\n    object-fit: cover;\r\n    width: 300px;\r\n    height: 300px;\r\n    margin: auto;\r\n    display: block;\r\n    border-top-left-radius: 10px;\r\n    border-top-right-radius: 10px;\r\n  }\r\n`;\r\nexport const CharItemContainer = styled.div`\r\n  width: 300px;\r\n  margin: 1rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  box-shadow: 0 0 1px 0 #3e2020;\r\n  border-radius: 10px;\r\n\r\n  h1 {\r\n    text-align: center;\r\n  }\r\n\r\n  &:hover {\r\n    transform: scale(1.02);\r\n    transition: transform 250ms ease-in;\r\n  }\r\n  transition: transform 200ms ease-out;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const SpinnerOverlay = styled.div`\r\n  height: 60vh;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const SpinnerContainer = styled.div`\r\n  display: inline-block;\r\n  width: 50px;\r\n  height: 50px;\r\n  border: 3px solid rgba(195, 195, 195, 0.6);\r\n  border-radius: 50%;\r\n  border-top-color: #636767;\r\n  animation: spin 1s ease-in-out infinite;\r\n  -webkit-animation: spin 1s ease-in-out infinite;\r\n  @keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n  @-webkit-keyframes spin {\r\n    to {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { SpinnerContainer, SpinnerOverlay } from \"./Spinner.styles\";\r\n\r\n// spinner is going to be a presentational component\r\nconst Spinner = () => (\r\n  <SpinnerOverlay>\r\n    <SpinnerContainer />\r\n  </SpinnerOverlay>\r\n);\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\n\r\nimport Spinner from \"./Spinner\";\r\n\r\nconst WithSpinner = (WrappedComponent) => ({ isLoading, ...otherProps }) => {\r\n  return isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />;\r\n};\r\n\r\nexport default WithSpinner;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ImageContainer, CharItemContainer } from \"./CharItem.styles\";\r\nimport WithSpinner from \"./WithSpinner\";\r\n\r\nconst CharItem = ({ data, index, isLoading }) => {\r\n  const {\r\n    // id,\r\n    name,\r\n    thumbnail: { extension, path },\r\n    comics: { available },\r\n  } = data;\r\n\r\n  return (\r\n    <CharItemContainer>\r\n      <Link to={`/marvel-api-react-task1/characters/${index}`}>\r\n        <ImageContainer>\r\n          <img src={`${path}.${extension}`} alt={`${name}`} />\r\n        </ImageContainer>\r\n      </Link>\r\n\r\n      <Link to={`/marvel-api-react-task1/characters/${index}`}>\r\n        <h1>{name}</h1>\r\n      </Link>\r\n      <p>{`Comics Available Number: ${available}`}</p>\r\n    </CharItemContainer>\r\n  );\r\n};\r\n\r\nexport default WithSpinner(CharItem);\r\n/* \r\ncorrect path:\r\npath + extension\r\n*/\r\n","import styled from \"styled-components\";\r\n\r\nexport const CharListContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  margin-top: 2rem;\r\n`;\r\n","import React from \"react\";\r\nimport CharItem from \"./CharItem\";\r\nimport { CharListContainer } from \"./CharListContainer\";\r\nimport WithSpinner from \"./WithSpinner\";\r\n\r\nconst CharList = ({ data, isLoading }) => {\r\n  return (\r\n    <CharListContainer>\r\n      {data.map((item, index) => (\r\n        <CharItem\r\n          key={item.id}\r\n          isLoading={isLoading}\r\n          data={item}\r\n          index={index}\r\n        />\r\n      ))}\r\n    </CharListContainer>\r\n  );\r\n};\r\n\r\nexport default WithSpinner(CharList);\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useFetch(url, id, dependencies) {\r\n  const [data, setData] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  function fetchData() {\r\n    fetch(url)\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(\"Failed to fetch\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((result) => {\r\n        id === \"preview\"\r\n          ? setData(result.data.results)\r\n          : setData(result.data.results[id]);\r\n\r\n        setIsLoading(false);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, dependencies); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return [data, isLoading];\r\n}\r\n","import React from \"react\";\r\nimport CharList from \"../components/CharList\";\r\nimport useFetch from \"../components/useFetch\";\r\nimport WithSpinner from \"../components/WithSpinner\";\r\n\r\nfunction CharListPage() {\r\n  const [data, isLoading] = useFetch(\r\n    \"https://mock-data-api.firebaseio.com/marvel-characters.json\",\r\n    \"preview\",\r\n    []\r\n  );\r\n\r\n  return <CharList data={data} isLoading={isLoading} />;\r\n}\r\n\r\nexport default WithSpinner(CharListPage);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function LayoutSimple({ children }) {\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-center mt-4\">\r\n        <Link className=\" btn btn-outline-primary mr-3 btn-lg\" to=\"/marvel-api-react-task1\">\r\n          Home\r\n        </Link>\r\n        <Link className=\" btn btn-outline-info btn-lg \" to=\"/marvel-api-react-task1/characters\">\r\n          Go to Characters List\r\n        </Link>\r\n      </div>\r\n      {children}\r\n    </>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nconst HomepageWrapper = styled.div`\r\n  display: flex;\r\n  padding: 30vh 0;\r\n  margin-top: 2vh;\r\n  justify-content: center;\r\n  align-self: center;\r\n  font-family: \"Marvel\", sans-serif;\r\n  background: url(\"https://i.gifer.com/XsZS.gif\") no-repeat fixed center;\r\n  background-size: cover;\r\n  border-radius: 10px;\r\n\r\n  h1 {\r\n    place-self: center;\r\n    font-size: 3rem;\r\n    color: peru;\r\n\r\n    &:hover {\r\n      transform: scale(1.1);\r\n      transition: transform 0.2s ease-in-out;\r\n    }\r\n    transition: transform 0.2s ease-in-out 0.2s;\r\n  }\r\n`;\r\nexport default HomepageWrapper;\r\n","import React from \"react\";\r\nimport HomepageWrapper from \"./Homepage.styles\";\r\n\r\nexport default function Homepage() {\r\n  return (\r\n    <HomepageWrapper>\r\n      <h1>Check your favorite Marvel Characters</h1>\r\n    </HomepageWrapper>\r\n  );\r\n}\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  body {\r\n    font-family: 'Open Sans Condensed', sans-serif;\r\n    padding: 20px 60px;\r\n    background-color: #d1ccc0;\r\n    height: 100vh;\r\n    // background: url('https://i.gifer.com/XsZS.gif') no-repeat fixed center;\r\n    // background-size: cover;\r\n\r\n    @media screen and (max-width: 800px)  {\r\n      padding: 10px;\r\n    }\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: black;\r\n  }\r\n\r\n  * {\r\n    box-sizing: border-box;\r\n    font-family: \"Marvel\", sans-serif;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const NameListContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-wrap: wrap;\r\n\r\n  p {\r\n    text-indent: 2rem;\r\n  }\r\n`;\r\n\r\nexport const HeaderContainer = styled.div`\r\n  margin: 2rem 0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  div {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n\r\n    h1 {\r\n      font-size: 3.5rem;\r\n      margin-right: auto;\r\n    }\r\n\r\n    h3 {\r\n      text-indent: 2rem;\r\n      margin-right: auto;\r\n\r\n      /* text-align: center; */\r\n      span {\r\n        font-weight: bold;\r\n      }\r\n    }\r\n  }\r\n  img {\r\n    width: 30vw;\r\n    max-width: 300px;\r\n    margin: auto;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nconst DetailInfoContainer = ({ item: { name } = {} }) => {\r\n  return (\r\n    <div>\r\n      <p>{name}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailInfoContainer;\r\n","import styled, { css } from \"styled-components\";\n\nconst buttonStyles = css`\n  background-color: black;\n  color: white;\n  border: none;\n\n  &:hover {\n    background-color: white;\n    color: black;\n    border: 1px solid black;\n    transition: all 200ms ease-in;\n  }\n`;\n\nexport const CustomButtonContainer = styled.button`\n  min-width: 165px;\n  width: 200px;\n  height: 50px;\n  letter-spacing: 0.5px;\n  line-height: 50px;\n  padding: 0 35px 0 35px;\n  font-size: 15px;\n  text-transform: uppercase;\n  font-weight: bolder;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n\n  ${buttonStyles}\n`;\n","import React from \"react\";\nimport { CustomButtonContainer } from \"./MyButton.styles\";\n\nconst MyButton = ({ children, ...props }) => (\n  <CustomButtonContainer {...props}>{children}</CustomButtonContainer>\n);\n\nexport default MyButton;\n","import styled from \"styled-components\";\n\nexport const ButtonsWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  margin-top: 2rem;\n`","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport MyButton from \"./MyButton\";\nimport { ButtonsWrapper } from \"./ButtonsWrapper.styles\";\n\nconst PageSwitcher = ({ link }) => {\n  const pageIndex = [.../\\d+$/.exec(link)];\n  const pageURL = link.replace(pageIndex, \"\");\n  const pagePrev = pageIndex == 0 ? 19 : pageIndex - 1;\n  const pageNext = pageIndex == 19 ? 0 : Number(pageIndex) + 1;\n\n  let history = useHistory();\n\n  function handleClickPrev() {\n    history.push(`${pageURL}${pagePrev}`);\n  }\n  function handleClickNext() {\n    history.push(`${pageURL}${pageNext}`);\n  }\n\n  return (\n    <ButtonsWrapper>\n      <MyButton onClick={handleClickPrev}>Go to previous page</MyButton>\n      <MyButton onClick={handleClickNext}>Go to next page</MyButton>\n    </ButtonsWrapper>\n  );\n};\n\nexport default PageSwitcher;\n","import React from \"react\";\r\n\r\nimport WithSpinner from \"./WithSpinner\";\r\nimport { HeaderContainer, NameListContainer } from \"./CharDetail.styles\";\r\nimport DetailInfoContainer from \"./DetailInfoContainer\";\r\nimport PageSwitcher from \"./PageSwitcher\";\r\n\r\nconst CharDetail = ({ data, isLoading, link }) => {\r\n  const {\r\n    id,\r\n    name,\r\n    thumbnail: { extension, path },\r\n    comics: { available: comicsNumber, items: comicsItems },\r\n    events: { available: eventsNumber, items: eventsItems },\r\n    series: { available: seriesNumber, items: seriesItems },\r\n    stories: { available: storiesNumber, items: storiesItems },\r\n  } = data;\r\n\r\n  return (\r\n    <div className=\"detail-page-container\">\r\n      <PageSwitcher link={link} />\r\n      <HeaderContainer>\r\n        <div>\r\n          <h1>{name}</h1>\r\n          <h3><span>ID: </span>{id}</h3>\r\n        </div>\r\n        <img src={`${path}.${extension}`} alt={`${name}`} />\r\n      </HeaderContainer>\r\n      <div className=\"detail-page-info-body\">\r\n        <div className=\"detail-page-comics\">\r\n          <h3>{`Available comics amount: ${comicsNumber}`}</h3>\r\n          <NameListContainer>\r\n            {comicsNumber === 0 ? (\r\n              <DetailInfoContainer />\r\n            ) : (\r\n              comicsItems.map((item, i) => (\r\n                <DetailInfoContainer key={i} item={item} />\r\n              ))\r\n            )}\r\n          </NameListContainer>\r\n        </div>\r\n\r\n        <div className=\"detail-page-events\">\r\n          <h3>{`Available events amount: ${eventsNumber}`}</h3>\r\n          <NameListContainer>\r\n            {eventsNumber === 0 ? (\r\n              <DetailInfoContainer />\r\n            ) : (\r\n              eventsItems.map((item, i) => (\r\n                <DetailInfoContainer key={i} item={item} />\r\n              ))\r\n            )}\r\n          </NameListContainer>\r\n        </div>\r\n\r\n        <div className=\"detail-page-events\">\r\n          <h3>{`Available series amount: ${seriesNumber}`}</h3>\r\n          <NameListContainer>\r\n            {seriesNumber === 0 ? (\r\n              <DetailInfoContainer />\r\n            ) : (\r\n              seriesItems.map((item, i) => (\r\n                <DetailInfoContainer key={i} item={item} />\r\n              ))\r\n            )}\r\n          </NameListContainer>\r\n        </div>\r\n\r\n        <div className=\"detail-page-stories\">\r\n          <h3>{`Available stories amount: ${storiesNumber}`}</h3>\r\n          <NameListContainer>\r\n            {storiesNumber === 0 ? (\r\n              <DetailInfoContainer />\r\n            ) : (\r\n              storiesItems.map((item, i) => (\r\n                <DetailInfoContainer key={i} item={item} />\r\n              ))\r\n            )}\r\n          </NameListContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WithSpinner(CharDetail);\r\n","import React from \"react\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nimport CharDetail from \"./CharDetail\";\r\n\r\nconst CharDetailPage = (props) => {\r\n  const id = props.match.params.id;\r\n  const link = props.location.pathname;\r\n  const [data, isLoading] = useFetch(\r\n    \"https://mock-data-api.firebaseio.com/marvel-characters.json\",\r\n    id,\r\n    []\r\n  );\r\n\r\n  return <CharDetail data={data} isLoading={isLoading} link={link} />;\r\n};\r\n\r\nexport default CharDetailPage;\r\n","import React from \"react\";\r\nimport CharListPage from \"./pages/CharListPage\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport LayoutWrapper from \"./components/LayoutWrapper\";\r\nimport Homepage from \"./pages/Homepage\";\r\n\r\nimport \"./App.css\";\r\nimport { GlobalStyle } from \"./components/GlobalStyle.styles.jsx\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport CharDetailPage from \"./components/CharDetailPage\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <GlobalStyle />\r\n      <Switch>\r\n        <Route path=\"/marvel-api-react-task1/\" exact>\r\n          <LayoutWrapper>\r\n            <Homepage />\r\n          </LayoutWrapper>\r\n        </Route>\r\n\r\n        <Route\r\n          path=\"/marvel-api-react-task1/characters/:id\" exact\r\n          render={(props) => (\r\n            <LayoutWrapper>\r\n              <CharDetailPage {...props} />\r\n            </LayoutWrapper>\r\n          )}\r\n        ></Route>\r\n\r\n        <Route path=\"/marvel-api-react-task1/characters\">\r\n          <LayoutWrapper>\r\n            <CharListPage />\r\n          </LayoutWrapper>\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter forceRefresh={true}>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}